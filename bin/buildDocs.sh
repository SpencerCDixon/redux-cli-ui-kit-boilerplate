#!/usr/bin/env node

/**
 * This example script expects a JSON blob generated by react-docgen as input.
 * It then takes that input and generates markdown files documenting how the
 * React components are used.
 */

var fs   = require('fs'),
    fse  = require('fs-extra'),
    pj   = require('prettyjson'),
    path = require('path');

var generateDocumentation = require('./generateDocumentation');

var json = '';
process.stdin.setEncoding('utf8');
process.stdin.on('readable', function() {
  var chunk = process.stdin.read();
  if (chunk !== null) {
    json += chunk;
  }
});

process.stdin.on('end', function() {
  var finalJson = JSON.parse(json);

  // console.log(pj.render(finalJson));
  buildDocs(finalJson);
  // console.log('');
});

  // api is an object keyed by filepath. We use the file name as component name.
function buildDocs(api) {
  for (var filepath in api) {
    var name = getComponentName(filepath);
    var documentation = generateDocumentation(name, api[filepath]);
    var filepath = getDocumentationPath(name, filepath);

    fse.outputFileSync(filepath, documentation);
    process.stdout.write('Generated docs for: ' + filepath + '\n');
  }
}

function getComponentName(filepath) {
  var name = path.basename(filepath);
  var ext;
  while ((ext = path.extname(name))) {
    name = name.substring(0, name.length - ext.length);
  }
  return name;
}

function getDocumentationPath(name, filepath) {
  var array = filepath.split('/');
  var path  = array.slice(0, -1);

  return path.join('/') + '/' + name + 'Documentation.js';
}
